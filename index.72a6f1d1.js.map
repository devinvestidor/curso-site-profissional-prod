{"mappings":"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","sources":["<anon>","assets/vendor/purecounter/purecounter_vanilla.js","assets/vendor/purecounter/webpack:/PureCounter/webpack/universalModuleDefinition","assets/vendor/purecounter/webpack:/PureCounter/js/purecounter_vanilla.js","assets/vendor/purecounter/webpack:/PureCounter/webpack/bootstrap","assets/vendor/purecounter/webpack:/PureCounter/webpack/startup"],"sourcesContent":["/*!\r\n * purecounter.js - A simple yet configurable native javascript counter which you can count on.\r\n * Author: Stig Rex\r\n * Version: 1.5.0\r\n * Url: https://github.com/srexi/purecounterjs\r\n * License: MIT\r\n */ !function(e, t) {\n    \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof exports ? exports.PureCounter = t() : e.PureCounter = t();\n}(self, function() {\n    var e, t, r;\n    return e = {\n        638: function(e) {\n            function t(e, t, r) {\n                return t in e ? Object.defineProperty(e, t, {\n                    value: r,\n                    enumerable: !0,\n                    configurable: !0,\n                    writable: !0\n                }) : e[t] = r, e;\n            }\n            function r(e) {\n                return function(e) {\n                    if (Array.isArray(e)) return n(e);\n                }(e) || function(e) {\n                    if (\"undefined\" != typeof Symbol && null != e[Symbol.iterator] || null != e[\"@@iterator\"]) return Array.from(e);\n                }(e) || function(e, t) {\n                    if (e) {\n                        if (\"string\" == typeof e) return n(e, t);\n                        var r = Object.prototype.toString.call(e).slice(8, -1);\n                        return \"Object\" === r && e.constructor && (r = e.constructor.name), \"Map\" === r || \"Set\" === r ? Array.from(e) : \"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? n(e, t) : void 0;\n                    }\n                }(e) || function() {\n                    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }();\n            }\n            function n(e, t) {\n                (null == t || t > e.length) && (t = e.length);\n                for(var r = 0, n = new Array(t); r < t; r++)n[r] = e[r];\n                return n;\n            }\n            function o(e) {\n                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = {};\n                for(var n in e)if (t == {} || t.hasOwnProperty(n)) {\n                    var o = c(e[n]);\n                    r[n] = o, n.match(/duration|pulse/) && (r[n] = \"boolean\" != typeof o ? 1e3 * o : o);\n                }\n                return Object.assign({}, t, r);\n            }\n            function i(e, t) {\n                var r = (t.end - t.start) / (t.duration / t.delay), n = \"inc\";\n                t.start > t.end && (n = \"dec\", r *= -1);\n                var o = c(t.start);\n                e.innerHTML = u(o, t), !0 === t.once && e.setAttribute(\"data-purecounter-duration\", 0);\n                var i = setInterval(function() {\n                    var a = function(e, t) {\n                        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"inc\";\n                        return e = c(e), t = c(t), parseFloat(\"inc\" === r ? e + t : e - t);\n                    }(o, r, n);\n                    e.innerHTML = u(a, t), ((o = a) >= t.end && \"inc\" == n || o <= t.end && \"dec\" == n) && (e.innerHTML = u(t.end, t), t.pulse && (e.setAttribute(\"data-purecounter-duration\", 0), setTimeout(function() {\n                        e.setAttribute(\"data-purecounter-duration\", t.duration / 1e3);\n                    }, t.pulse)), clearInterval(i));\n                }, t.delay);\n            }\n            function a(e, t) {\n                return Math.pow(e, t);\n            }\n            function u(e, t) {\n                var r = {\n                    minimumFractionDigits: t.decimals,\n                    maximumFractionDigits: t.decimals\n                }, n = \"string\" == typeof t.formater ? t.formater : void 0;\n                return e = function(e, t) {\n                    if (t.filesizing || t.currency) {\n                        e = Math.abs(Number(e));\n                        var r = 1e3, n = t.currency && \"string\" == typeof t.currency ? t.currency : \"\", o = t.decimals || 1, i = [\n                            \"\",\n                            \"K\",\n                            \"M\",\n                            \"B\",\n                            \"T\"\n                        ], u = \"\";\n                        t.filesizing && (r = 1024, i = [\n                            \"bytes\",\n                            \"KB\",\n                            \"MB\",\n                            \"GB\",\n                            \"TB\"\n                        ]);\n                        for(var c = 4; c >= 0; c--)if (0 === c && (u = \"\".concat(e.toFixed(o), \" \").concat(i[c])), e >= a(r, c)) {\n                            u = \"\".concat((e / a(r, c)).toFixed(o), \" \").concat(i[c]);\n                            break;\n                        }\n                        return n + u;\n                    }\n                    return parseFloat(e);\n                }(e, t), function(e, t) {\n                    if (t.formater) {\n                        var r = t.separator ? \"string\" == typeof t.separator ? t.separator : \",\" : \"\";\n                        return \"en-US\" !== t.formater && !0 === t.separator ? e : (n = r, e.replace(/^(?:(\\d{1,3},(?:\\d{1,3},?)*)|(\\d{1,3}\\.(?:\\d{1,3}\\.?)*)|(\\d{1,3}(?:\\s\\d{1,3})*))([\\.,]?\\d{0,2}?)$/gi, function(e, t, r, o, i) {\n                            var a = \"\", u = \"\";\n                            if (void 0 !== t ? (a = t.replace(new RegExp(/,/gi, \"gi\"), n), u = \",\") : void 0 !== r ? a = r.replace(new RegExp(/\\./gi, \"gi\"), n) : void 0 !== o && (a = o.replace(new RegExp(/ /gi, \"gi\"), n)), void 0 !== i) {\n                                var c = \",\" !== u && \",\" !== n ? \",\" : \".\";\n                                a += void 0 !== i ? i.replace(new RegExp(/\\.|,/gi, \"gi\"), c) : \"\";\n                            }\n                            return a;\n                        }));\n                    }\n                    var n;\n                    return e;\n                }(e = t.formater ? e.toLocaleString(n, r) : parseInt(e).toString(), t);\n            }\n            function c(e) {\n                return /^[0-9]+\\.[0-9]+$/.test(e) ? parseFloat(e) : /^[0-9]+$/.test(e) ? parseInt(e) : /^true|false/i.test(e) ? /^true/i.test(e) : e;\n            }\n            function f(e) {\n                for(var t = e.offsetTop, r = e.offsetLeft, n = e.offsetWidth, o = e.offsetHeight; e.offsetParent;)t += (e = e.offsetParent).offsetTop, r += e.offsetLeft;\n                return t >= window.pageYOffset && r >= window.pageXOffset && t + o <= window.pageYOffset + window.innerHeight && r + n <= window.pageXOffset + window.innerWidth;\n            }\n            function s() {\n                return \"IntersectionObserver\" in window && \"IntersectionObserverEntry\" in window && \"intersectionRatio\" in window.IntersectionObserverEntry.prototype;\n            }\n            e.exports = function() {\n                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n = {\n                    start: 0,\n                    end: 100,\n                    duration: 2e3,\n                    delay: 10,\n                    once: !0,\n                    pulse: !1,\n                    decimals: 0,\n                    legacy: !0,\n                    filesizing: !1,\n                    currency: !1,\n                    separator: !1,\n                    formater: \"us-US\",\n                    selector: \".purecounter\"\n                }, a = o(e, n);\n                function d() {\n                    var e = document.querySelectorAll(a.selector);\n                    if (0 !== e.length) {\n                        if (s()) {\n                            var t = new IntersectionObserver(p.bind(this), {\n                                root: null,\n                                rootMargin: \"20px\",\n                                threshold: .5\n                            });\n                            e.forEach(function(e) {\n                                t.observe(e);\n                            });\n                        } else window.addEventListener && (l(e), window.addEventListener(\"scroll\", function(t) {\n                            l(e);\n                        }, {\n                            passive: !0\n                        }));\n                    }\n                }\n                function l(e) {\n                    e.forEach(function(e) {\n                        !0 === v(e).legacy && f(e) && p([\n                            e\n                        ]);\n                    });\n                }\n                function p(e, t) {\n                    e.forEach(function(e) {\n                        var r = e.target || e, n = v(r);\n                        if (n.duration <= 0) return r.innerHTML = u(n.end, n);\n                        if (!t && !f(e) || t && e.intersectionRatio < .5) {\n                            var o = n.start > n.end ? n.end : n.start;\n                            return r.innerHTML = u(o, n);\n                        }\n                        setTimeout(function() {\n                            return i(r, n);\n                        }, n.delay);\n                    });\n                }\n                function v(e) {\n                    var n = a, i = [].filter.call(e.attributes, function(e) {\n                        return /^data-purecounter-/.test(e.name);\n                    });\n                    return o(0 != i.length ? Object.assign.apply(Object, [\n                        {}\n                    ].concat(r(i.map(function(e) {\n                        var r = e.name, n = e.value;\n                        return t({}, r.replace(\"data-purecounter-\", \"\").toLowerCase(), c(n));\n                    })))) : {}, n);\n                }\n                d();\n            };\n        }\n    }, t = {}, r = function r(n) {\n        var o = t[n];\n        if (void 0 !== o) return o.exports;\n        var i = t[n] = {\n            exports: {}\n        };\n        return e[n](i, i.exports, r), i.exports;\n    }(638), r;\n});\n\n//# sourceMappingURL=index.72a6f1d1.js.map\n","/*!\r\n * purecounter.js - A simple yet configurable native javascript counter which you can count on.\r\n * Author: Stig Rex\r\n * Version: 1.5.0\r\n * Url: https://github.com/srexi/purecounterjs\r\n * License: MIT\r\n */\r\n!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.PureCounter=t():e.PureCounter=t()}(self,(function(){return e={638:function(e){function t(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function r(e){return function(e){if(Array.isArray(e))return n(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||function(e,t){if(e){if(\"string\"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r={};for(var n in e)if(t=={}||t.hasOwnProperty(n)){var o=c(e[n]);r[n]=o,n.match(/duration|pulse/)&&(r[n]=\"boolean\"!=typeof o?1e3*o:o)}return Object.assign({},t,r)}function i(e,t){var r=(t.end-t.start)/(t.duration/t.delay),n=\"inc\";t.start>t.end&&(n=\"dec\",r*=-1);var o=c(t.start);e.innerHTML=u(o,t),!0===t.once&&e.setAttribute(\"data-purecounter-duration\",0);var i=setInterval((function(){var a=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"inc\";return e=c(e),t=c(t),parseFloat(\"inc\"===r?e+t:e-t)}(o,r,n);e.innerHTML=u(a,t),((o=a)>=t.end&&\"inc\"==n||o<=t.end&&\"dec\"==n)&&(e.innerHTML=u(t.end,t),t.pulse&&(e.setAttribute(\"data-purecounter-duration\",0),setTimeout((function(){e.setAttribute(\"data-purecounter-duration\",t.duration/1e3)}),t.pulse)),clearInterval(i))}),t.delay)}function a(e,t){return Math.pow(e,t)}function u(e,t){var r={minimumFractionDigits:t.decimals,maximumFractionDigits:t.decimals},n=\"string\"==typeof t.formater?t.formater:void 0;return e=function(e,t){if(t.filesizing||t.currency){e=Math.abs(Number(e));var r=1e3,n=t.currency&&\"string\"==typeof t.currency?t.currency:\"\",o=t.decimals||1,i=[\"\",\"K\",\"M\",\"B\",\"T\"],u=\"\";t.filesizing&&(r=1024,i=[\"bytes\",\"KB\",\"MB\",\"GB\",\"TB\"]);for(var c=4;c>=0;c--)if(0===c&&(u=\"\".concat(e.toFixed(o),\" \").concat(i[c])),e>=a(r,c)){u=\"\".concat((e/a(r,c)).toFixed(o),\" \").concat(i[c]);break}return n+u}return parseFloat(e)}(e,t),function(e,t){if(t.formater){var r=t.separator?\"string\"==typeof t.separator?t.separator:\",\":\"\";return\"en-US\"!==t.formater&&!0===t.separator?e:(n=r,e.replace(/^(?:(\\d{1,3},(?:\\d{1,3},?)*)|(\\d{1,3}\\.(?:\\d{1,3}\\.?)*)|(\\d{1,3}(?:\\s\\d{1,3})*))([\\.,]?\\d{0,2}?)$/gi,(function(e,t,r,o,i){var a=\"\",u=\"\";if(void 0!==t?(a=t.replace(new RegExp(/,/gi,\"gi\"),n),u=\",\"):void 0!==r?a=r.replace(new RegExp(/\\./gi,\"gi\"),n):void 0!==o&&(a=o.replace(new RegExp(/ /gi,\"gi\"),n)),void 0!==i){var c=\",\"!==u&&\",\"!==n?\",\":\".\";a+=void 0!==i?i.replace(new RegExp(/\\.|,/gi,\"gi\"),c):\"\"}return a})))}var n;return e}(e=t.formater?e.toLocaleString(n,r):parseInt(e).toString(),t)}function c(e){return/^[0-9]+\\.[0-9]+$/.test(e)?parseFloat(e):/^[0-9]+$/.test(e)?parseInt(e):/^true|false/i.test(e)?/^true/i.test(e):e}function f(e){for(var t=e.offsetTop,r=e.offsetLeft,n=e.offsetWidth,o=e.offsetHeight;e.offsetParent;)t+=(e=e.offsetParent).offsetTop,r+=e.offsetLeft;return t>=window.pageYOffset&&r>=window.pageXOffset&&t+o<=window.pageYOffset+window.innerHeight&&r+n<=window.pageXOffset+window.innerWidth}function s(){return\"IntersectionObserver\"in window&&\"IntersectionObserverEntry\"in window&&\"intersectionRatio\"in window.IntersectionObserverEntry.prototype}e.exports=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n={start:0,end:100,duration:2e3,delay:10,once:!0,pulse:!1,decimals:0,legacy:!0,filesizing:!1,currency:!1,separator:!1,formater:\"us-US\",selector:\".purecounter\"},a=o(e,n);function d(){var e=document.querySelectorAll(a.selector);if(0!==e.length)if(s()){var t=new IntersectionObserver(p.bind(this),{root:null,rootMargin:\"20px\",threshold:.5});e.forEach((function(e){t.observe(e)}))}else window.addEventListener&&(l(e),window.addEventListener(\"scroll\",(function(t){l(e)}),{passive:!0}))}function l(e){e.forEach((function(e){!0===v(e).legacy&&f(e)&&p([e])}))}function p(e,t){e.forEach((function(e){var r=e.target||e,n=v(r);if(n.duration<=0)return r.innerHTML=u(n.end,n);if(!t&&!f(e)||t&&e.intersectionRatio<.5){var o=n.start>n.end?n.end:n.start;return r.innerHTML=u(o,n)}setTimeout((function(){return i(r,n)}),n.delay)}))}function v(e){var n=a,i=[].filter.call(e.attributes,(function(e){return/^data-purecounter-/.test(e.name)}));return o(0!=i.length?Object.assign.apply(Object,[{}].concat(r(i.map((function(e){var r=e.name,n=e.value;return t({},r.replace(\"data-purecounter-\",\"\").toLowerCase(),c(n))}))))):{},n)}d()}}},t={},r=function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}(638),r;var e,t,r}));\r\n//# sourceMappingURL=purecounter_vanilla.js.map","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PureCounter\"] = factory();\n\telse\n\t\troot[\"PureCounter\"] = factory();\n})(self, function() {\nreturn ","/** This function is for create and merge configuration */\r\nfunction setOptions(config, baseConfig = {}) {\r\n    // Create new Config object;\r\n    var newConfig = {};\r\n\r\n    // Loop config items to set it value into newConfig\r\n    for (var key in config) {\r\n        // if baseConfig is set, only accept the baseconfig property\r\n        if (baseConfig != {} && !baseConfig.hasOwnProperty(key)) continue;\r\n        // parse the config value\r\n        var val = parseValue(config[key]);\r\n        // set the newConfig property value\r\n        newConfig[key] = val;\r\n        // Exclusive for 'duration' or 'pulse' property, recheck the value\r\n        // If it's not a boolean, just set it to milisecond unit\r\n        if (key.match(/duration|pulse/)) {\r\n            newConfig[key] = typeof val != \"boolean\" ? val * 1000 : val;\r\n        }\r\n    }\r\n\r\n    // Finally, we can just merge the baseConfig (if any), with newConfig.\r\n    return Object.assign({}, baseConfig, newConfig);\r\n}\r\n\r\n/** This is the the counter method */\r\nfunction startCounter(element, config) {\r\n    // First, get the increments step\r\n    var incrementsPerStep =\r\n        (config.end - config.start) / (config.duration / config.delay);\r\n    // Next, set the counter mode (Increment or Decrement)\r\n    var countMode = \"inc\";\r\n\r\n    // Set mode to 'decrement' and 'increment step' to minus if start is larger than end\r\n    if (config.start > config.end) {\r\n        countMode = \"dec\";\r\n        incrementsPerStep *= -1;\r\n    }\r\n\r\n    // Next, determine the starting value\r\n    var currentCount = parseValue(config.start);\r\n    // And then print it's value to the page\r\n    element.innerHTML = formatNumber(currentCount, config);\r\n\r\n    // If the config 'once' is true, then set the 'duration' to 0\r\n    if (config.once === true) {\r\n        element.setAttribute(\"data-purecounter-duration\", 0);\r\n    }\r\n\r\n    // Now, start counting with counterWorker using Interval method based on delay\r\n    var counterWorker = setInterval(() => {\r\n        // First, determine the next value base on current value, increment value, and count mode\r\n        var nextNum = nextNumber(currentCount, incrementsPerStep, countMode);\r\n        // Next, print that value to the page\r\n        element.innerHTML = formatNumber(nextNum, config);\r\n        // Now set that value to the current value, because it's already printed\r\n        currentCount = nextNum;\r\n\r\n        // If the value is larger or less than the 'end' (base on mode), then  print the end value and stop the Interval\r\n        if (\r\n            (currentCount >= config.end && countMode == \"inc\") ||\r\n            (currentCount <= config.end && countMode == \"dec\")\r\n        ) {\r\n            element.innerHTML = formatNumber(config.end, config);\r\n            // If 'pulse' is set ignore the 'once' config\r\n            if (config.pulse) {\r\n                // First set the 'duration' to zero\r\n                element.setAttribute(\"data-purecounter-duration\", 0);\r\n                // Next, use timeout to reset it duration back based on 'pulse' config\r\n                setTimeout(() => {\r\n                    element.setAttribute(\r\n                        \"data-purecounter-duration\",\r\n                        config.duration / 1000\r\n                    );\r\n                }, config.pulse);\r\n            }\r\n            clearInterval(counterWorker);\r\n        }\r\n    }, config.delay);\r\n}\r\n\r\n/** This function is to get the next number */\r\nfunction nextNumber(number, steps, mode = \"inc\") {\r\n    // First, get the exact value from the number and step (int or float)\r\n    number = parseValue(number);\r\n    steps = parseValue(steps);\r\n\r\n    // Last, get the next number based on current number, increment step, and count mode\r\n    // Always return it as float\r\n    return parseFloat(mode === \"inc\" ? number + steps : number - steps);\r\n}\r\n\r\n/** This function is to convert number into currency format */\r\nfunction convertNumber(number, config) {\r\n    /** Use converter if filesizing or currency is on */\r\n    if (config.filesizing || config.currency) {\r\n        number = Math.abs(Number(number)); // Get the absolute value of number\r\n\r\n        var baseNumber = 1000, // Base multiplying treshold\r\n            symbol =\r\n                config.currency && typeof config.currency === \"string\"\r\n                    ? config.currency\r\n                    : \"\", // Set the Currency Symbol (if any)\r\n            limit = config.decimals || 1, // Set the decimal limit (default is 1)\r\n            unit = [\"\", \"K\", \"M\", \"B\", \"T\"], // Number unit based exponent threshold\r\n            value = \"\"; // Define value variable\r\n\r\n        /** Changes base number and its unit for filesizing */\r\n        if (config.filesizing) {\r\n            baseNumber = 1024; // Use 1024 instead of 1000\r\n            unit = [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\"]; // Change to 'bytes' unit\r\n        }\r\n\r\n        /** Set value based on the threshold */\r\n        for (var i = 4; i >= 0; i--) {\r\n            // If the exponent is 0\r\n            if (i === 0) value = `${number.toFixed(limit)} ${unit[i]}`;\r\n            // If the exponent is above zero\r\n            if (number >= getFilesizeThreshold(baseNumber, i)) {\r\n                value = `${(number / getFilesizeThreshold(baseNumber, i)).toFixed(\r\n                    limit\r\n                )} ${unit[i]}`;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Apply symbol before the value and return it as string\r\n        return symbol + value;\r\n    } else {\r\n        /** Return its value as float if not using filesizing or currency*/\r\n        return parseFloat(number);\r\n    }\r\n}\r\n\r\n/** This function will get the given base.  */\r\nfunction getFilesizeThreshold(baseNumber, index) {\r\n    return Math.pow(baseNumber, index);\r\n}\r\n\r\n/** This function is to get the last formated number */\r\nfunction applySeparator(value, config) {\r\n    // Get replaced value based on it's separator/symbol.\r\n    function replacedValue(val, separator) {\r\n        // Well this is my regExp for detecting the Thausands Separator\r\n        // I use 3 groups to determine it's separator\r\n        // THen the group 4 is to get the decimals value\r\n        var separatorRegExp =\r\n            /^(?:(\\d{1,3},(?:\\d{1,3},?)*)|(\\d{1,3}\\.(?:\\d{1,3}\\.?)*)|(\\d{1,3}(?:\\s\\d{1,3})*))([\\.,]?\\d{0,2}?)$/gi;\r\n\r\n        return val.replace(separatorRegExp, function (match, g1, g2, g3, g4) {\r\n            // set initial result value\r\n            var result = \"\",\r\n                sep = \"\";\r\n            if (g1 !== undefined) {\r\n                // Group 1 is using comma as thausands separator, and period as decimal separator\r\n                result = g1.replace(new RegExp(/,/gi, \"gi\"), separator);\r\n                sep = \",\";\r\n            } else if (g2 !== undefined) {\r\n                // Group 2 is using period as thausands separator, and comma as decimal separator\r\n                result = g2.replace(new RegExp(/\\./gi, \"gi\"), separator);\r\n            } else if (g3 !== undefined) {\r\n                // Group 3 is using space as thausands separator, and comma as decimal separator\r\n                result = g3.replace(new RegExp(/ /gi, \"gi\"), separator);\r\n            }\r\n            if (g4 !== undefined) {\r\n                var decimal = sep !== \",\" ? (separator !== \",\" ? \",\" : \".\") : \".\";\r\n                result +=\r\n                    g4 !== undefined\r\n                        ? g4.replace(new RegExp(/\\.|,/gi, \"gi\"), decimal)\r\n                        : \"\";\r\n            }\r\n            // Returning result value;\r\n            return result;\r\n        });\r\n    }\r\n    // If config formater is not false, then apply separator\r\n    if (config.formater) {\r\n        // Now get the separator symbol\r\n        var symbol = config.separator // if config separator is setted\r\n            ? typeof config.separator === \"string\" // Check the type of value\r\n                ? config.separator // If it's type is string, then apply it's value\r\n                : \",\" // If it's not string (boolean), then apply comma as default separator\r\n            : \"\";\r\n        // Special exception when locale is not 'en-US' but separator value is 'true'\r\n        // Use it's default locale thausands separator.\r\n        if (config.formater !== \"en-US\" && config.separator === true) {\r\n            return value;\r\n        }\r\n        // Return the replaced Value based on it's symbol\r\n        return replacedValue(value, symbol);\r\n    }\r\n    // If config formater is false, then return it's default value\r\n    return value;\r\n}\r\n\r\n/** This function is to get formated number to be printed in the page */\r\nfunction formatNumber(number, config) {\r\n    // This is the configuration for 'toLocaleString' method\r\n    var strConfig = {\r\n        minimumFractionDigits: config.decimals,\r\n        maximumFractionDigits: config.decimals,\r\n    };\r\n    // Get locale from config formater\r\n    var locale = typeof config.formater === \"string\" ? config.formater : undefined;\r\n\r\n    // Set and convert the number base on its config.\r\n    number = convertNumber(number, config);\r\n\r\n    // Now format the number to string base on it's locale\r\n    number = config.formater\r\n        ? number.toLocaleString(locale, strConfig)\r\n        : parseInt(number).toString();\r\n\r\n    // Last, apply the number separator using number as string\r\n    return applySeparator(number, config);\r\n}\r\n\r\n/** This function is to get the parsed value */\r\nfunction parseValue(data) {\r\n    // If number with dot (.), will be parsed as float\r\n    if (/^[0-9]+\\.[0-9]+$/.test(data)) {\r\n        return parseFloat(data);\r\n    }\r\n    // If just number, will be parsed as integer\r\n    if (/^[0-9]+$/.test(data)) {\r\n        return parseInt(data);\r\n    }\r\n    // If it's boolean string, will be parsed as boolean\r\n    if (/^true|false/i.test(data)) {\r\n        return /^true/i.test(data);\r\n    }\r\n    // Return it's value as default\r\n    return data;\r\n}\r\n\r\n// This function is to detect the element is in view or not.\r\nfunction elementIsInView(element) {\r\n    var top = element.offsetTop;\r\n    var left = element.offsetLeft;\r\n    var width = element.offsetWidth;\r\n    var height = element.offsetHeight;\r\n\r\n    while (element.offsetParent) {\r\n        element = element.offsetParent;\r\n        top += element.offsetTop;\r\n        left += element.offsetLeft;\r\n    }\r\n\r\n    return (\r\n        top >= window.pageYOffset &&\r\n        left >= window.pageXOffset &&\r\n        top + height <= window.pageYOffset + window.innerHeight &&\r\n        left + width <= window.pageXOffset + window.innerWidth\r\n    );\r\n}\r\n\r\n/** Just some condition to check browser Intersection Support */\r\nfunction intersectionListenerSupported() {\r\n    return (\r\n        \"IntersectionObserver\" in window &&\r\n        \"IntersectionObserverEntry\" in window &&\r\n        \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\r\n    );\r\n}\r\n\r\n/** Initialize PureCounter */\r\nfunction PureCounter(options = {}) {\r\n    var configs = {\r\n        start: 0, // Starting number [uint]\r\n        end: 100, // End number [uint]\r\n        duration: 2000, // Count duration [milisecond]\r\n        delay: 10, // Count delay [milisecond]\r\n        once: true, // Counting at once or recount when scroll [boolean]\r\n        pulse: false, // Pulse count for certain time [boolean|milisecond]\r\n        decimals: 0, // Decimal places [uint]\r\n        legacy: true, // If this is true it will use the scroll event listener on browsers\r\n        filesizing: false, // Is it for filesize?\r\n        currency: false, // Is it for currency? Use it for set the symbol too [boolean|char|string]\r\n        separator: false, // Do you want to use thausands separator? use it for set the symbol too [boolean|char|string]\r\n        formater: \"us-US\", // Number toLocaleString locale/formater, by default is \"en-US\" [string|boolean:false]\r\n        selector: \".purecounter\", // HTML query selector for spesific element\r\n    };\r\n    var configOptions = setOptions(options, configs);\r\n\r\n    function registerEventListeners() {\r\n        /** Get all elements with class 'purecounter' */\r\n        var elements = document.querySelectorAll(configOptions.selector);\r\n        /** Return if no elements */\r\n        if (elements.length === 0) {\r\n            return;\r\n        }\r\n\r\n        /** Run animateElements base on Intersection Support */\r\n        if (intersectionListenerSupported()) {\r\n            var intersectObserver = new IntersectionObserver(animateElements.bind(this), {\r\n                root: null,\r\n                rootMargin: \"20px\",\r\n                threshold: 0.5,\r\n            });\r\n\r\n            elements.forEach((element) => {\r\n                intersectObserver.observe(element);\r\n            });\r\n        } else {\r\n            if (window.addEventListener) {\r\n                animateLegacy(elements);\r\n                window.addEventListener(\r\n                    \"scroll\",\r\n                    function (e) {\r\n                        animateLegacy(elements);\r\n                    },\r\n                    { passive: true }\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /** This legacy to make Purecounter use very lightweight & fast */\r\n    function animateLegacy(elements) {\r\n        elements.forEach((element) => {\r\n            var config = parseConfig(element);\r\n            if (config.legacy === true && elementIsInView(element)) {\r\n                animateElements([element]);\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Main Element Count Animation */\r\n    function animateElements(elements, observer) {\r\n        elements.forEach((element) => {\r\n            var elm = element.target || element; // Just make sure which element will be used\r\n            var elementConfig = parseConfig(elm); // Get config value on that element\r\n\r\n            // If duration is less than or equal zero, just format the 'end' value\r\n            if (elementConfig.duration <= 0) {\r\n                return (elm.innerHTML = formatNumber(elementConfig.end, elementConfig));\r\n            }\r\n\r\n            if (\r\n                (!observer && !elementIsInView(element)) ||\r\n                (observer && element.intersectionRatio < 0.5)\r\n            ) {\r\n                var value =\r\n                    elementConfig.start > elementConfig.end\r\n                        ? elementConfig.end\r\n                        : elementConfig.start;\r\n                return (elm.innerHTML = formatNumber(value, elementConfig));\r\n            }\r\n\r\n            // If duration is more than 0, then start the counter\r\n            setTimeout(() => {\r\n                return startCounter(elm, elementConfig);\r\n            }, elementConfig.delay);\r\n        });\r\n    }\r\n\r\n    /** This function is to generate the element Config */\r\n    function parseConfig(element) {\r\n        // First, we need to declare the base Config\r\n        // This config will be used if the element doesn't have config\r\n        var baseConfig = configOptions;\r\n\r\n        // Next, get all 'data-precounter-*' attributes value. Store to array\r\n        var configValues = [].filter.call(element.attributes, function (attr) {\r\n            return /^data-purecounter-/.test(attr.name);\r\n        });\r\n\r\n        // Now, we create element config as an object\r\n        var elementConfig =\r\n            configValues.length != 0\r\n                ? Object.assign(\r\n                      {},\r\n                      ...configValues.map(({ name, value }) => {\r\n                          var key = name.replace(\"data-purecounter-\", \"\").toLowerCase(),\r\n                              val = parseValue(value);\r\n\r\n                          return { [key]: val };\r\n                      })\r\n                  )\r\n                : {};\r\n\r\n        // Last setOptions and return\r\n        return setOptions(elementConfig, baseConfig);\r\n    }\r\n\r\n    /** Run the initial function */\r\n    registerEventListeners();\r\n}\r\n\r\nmodule.exports = PureCounter;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(638);\n"],"names":["e","t","self","n","length","r","Array","o","arguments","hasOwnProperty","c","match","Object","assign","u","minimumFractionDigits","decimals","maximumFractionDigits","formater","filesizing","currency","Math","abs","Number","i","concat","toFixed","pow","parseFloat","separator","replace","a","RegExp","toLocaleString","parseInt","toString","test","f","offsetTop","offsetLeft","offsetWidth","offsetHeight","offsetParent","window","pageYOffset","pageXOffset","innerHeight","innerWidth","exports","start","end","duration","delay","once","pulse","legacy","selector","l","forEach","v","p","target","innerHTML","intersectionRatio","setTimeout","setAttribute","setInterval","clearInterval","filter","call","attributes","name","apply","isArray","map","value","toLowerCase","defineProperty","enumerable","configurable","writable","Symbol","iterator","from","prototype","slice","constructor","TypeError","d","document","querySelectorAll","IntersectionObserverEntry","IntersectionObserver","bind","root","rootMargin","threshold","observe","addEventListener","passive","module","define","amd","PureCounter","factory","setOptions","config","baseConfig","newConfig","key","val","parseValue","startCounter","element","incrementsPerStep","countMode","currentCount","formatNumber","counterWorker","nextNum","number","steps","mode","nextNumber","getFilesizeThreshold","baseNumber","index","strConfig","locale","undefined","symbol","limit","unit","convertNumber","g1","g2","g3","g4","result","sep","decimal","applySeparator","data","elementIsInView","top","left","width","height","intersectionListenerSupported","options","configs","configOptions","registerEventListeners","elements","intersectObserver","animateElements","this","animateLegacy","parseConfig","observer","elm","elementConfig","configValues","attr","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"version":3,"file":"index.72a6f1d1.js.map"}